# Crawl4AI MCP Server Configuration

# Data Storage Configuration (Professional ~/.context42/ user directory)
CONTEXT42_HOME=~/.context42
COLLECTIONS_DB_PATH=${CONTEXT42_HOME}/databases/vector_sync.db
VECTOR_DB_PATH=${CONTEXT42_HOME}/databases/chromadb
# Legacy compatibility (will migrate automatically)
RAG_DB_PATH=${CONTEXT42_HOME}/databases/chromadb

# Collection Storage Configuration
# Choose storage mode: sqlite (default) or filesystem
COLLECTION_STORAGE_MODE=sqlite   # sqlite|filesystem

# SQLite Mode (default): All data stored in database
# - Compatible with existing installations
# - Best for database-centric workflows
# - No additional configuration needed

# Filesystem Mode: Files stored as regular files + metadata in SQLite  
# - Transparent file storage for external tool access
# - Version control friendly (git, editors, etc.)
# - Hybrid approach with metadata performance benefits
FILESYSTEM_COLLECTIONS_PATH=${CONTEXT42_HOME}/collections
FILESYSTEM_METADATA_DB_PATH=${CONTEXT42_HOME}/databases/filesystem_metadata.db
FILESYSTEM_AUTO_RECONCILE=true   # Detect external file changes automatically

# RAG Query LLM Configuration (for AI-powered answers)
RAG_LLM_PROVIDER=openai
RAG_OPENAI_API_KEY=your_openai_api_key_here
RAG_OPENAI_MODEL=gpt-4o-mini

# Alternative: Ollama Configuration (local LLM, no API key needed)
# RAG_LLM_PROVIDER=ollama
# RAG_OLLAMA_HOST=http://localhost:11434
# RAG_OLLAMA_MODEL=llama3.1:8b

# Optional: Proxy configuration
HTTP_PROXY=http://proxy.example.com:8080
HTTPS_PROXY=https://proxy.example.com:8080

# Optional: Crawl4AI configuration
CRAWL4AI_USER_AGENT=crawl4ai-mcp-server/1.0
CRAWL4AI_MAX_RETRIES=3
CRAWL4AI_TIMEOUT=30

# Optional: RAG Configuration
RAG_MODEL_NAME=distiluse-base-multilingual-cased-v1
RAG_CHUNK_SIZE=1000
RAG_DEVICE=cpu

# Optional: Logging configuration
LOG_LEVEL=INFO
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# Optional: MCP server configuration
MCP_SERVER_NAME=Crawl4AI-MCP-Server
MCP_SERVER_VERSION=0.1.0